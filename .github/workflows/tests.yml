name: Tests
on: [push, pull_request]

jobs:
  Windows:
    name: windows-${{ matrix.os-version }}-${{ matrix.build-config }}-${{ matrix.build-arch }}${{ matrix.build-tool }}
    runs-on: windows-${{ matrix.os-version }}
    strategy:
      fail-fast: false
      matrix:
        os-version: [2022, 2025]
        build-config: [debug, release, relwithdebinfo]
        build-arch: [Win32, x64]
        build-tool: ["", "-T ClangCL"]
        exclude:
        - build-arch: Win32
          build-tool: "-T ClangCL"

    steps:
    - name: Versions
      shell: bash
      run: |
        cmake --version
        git --version

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Configure
      shell: bash
      run: |
        mkdir build
        cd build
        cmake -A${{ matrix.build-arch }} ${{ matrix.build-tool }} -DCMAKE_BUILD_TYPE=${{ matrix.build-config }} ..

    - name: Build
      shell: bash
      run: |
        cd build
        cmake --build . --config ${{ matrix.build-config }}


  Ubuntu:
    name: ubuntu-${{ matrix.build-config }}
    runs-on: ubuntu-24.04
    env:
      CC: clang
      CXX: clang++
    strategy:
      fail-fast: false
      matrix:
        build-config: [debug, release, relwithdebinfo]

    steps:
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y xorg-dev libwayland-dev libxkbcommon-dev libpulse-dev libasound2-dev nasm libssl-dev

    - name: Versions
      run: |
        cmake --version
        git --version
        $CC --version
        $CXX --version

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-config }} ..

    - name: Build
      run: |
        cd build
        cmake --build . --config ${{ matrix.build-config }} -- -j$(( `nproc` + 1 ))


  Assets:
    name: Assets
    runs-on: ubuntu-24.04
    env:
      CC: clang
      CXX: clang++
    strategy:
      fail-fast: false
      matrix:
        build-config: [release]

    steps:
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y xorg-dev libwayland-dev libxkbcommon-dev libpulse-dev libasound2-dev nasm libssl-dev

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Configure and Build
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-config }} ..
        cmake --build . --config ${{ matrix.build-config }} -- -j$(( `nproc` + 1 ))

    - name: Assets
      run: |
        cd build/result/${{ matrix.build-config }}
        ./cage-asset-database
